version: '3'
networks:
  segrecanti_net:
    driver: bridge
volumes:
  segrecanti_db_vol:
    driver: local
services:
  segrecanti_db:
    image: mcr.microsoft.com/mssql/server:${COMPOSE_TAG_SQLSERVER}
    container_name: segrecanti_db
    restart: unless-stopped
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=${DATABASE_PWD}
    ports:
      - ${COMPOSE_PORT_SQLSERVER:-1433}:1433
    volumes:
      - segrecanti_db_vol:/var/opt/mssql
    networks:
      - segrecanti_net
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "$$MSSQL_SA_PASSWORD" -Q "SELECT 1" || exit 1
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s
  sqlserver.init:
    image: mcr.microsoft.com/mssql/server:${COMPOSE_TAG_SQLSERVER}
    restart: 'no'
    volumes:
      - ./init/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    depends_on:
      segrecanti_db:
        condition: service_healthy
    environment:
      - MSSQL_SA_PASSWORD=${DATABASE_PWD}
    command: >
      bash -c '
      set -e;
      /opt/mssql-tools/bin/sqlcmd -S segrecanti_db -U sa -P "$$MSSQL_SA_PASSWORD" -i /docker-entrypoint-initdb.d/initdb_segrecanti.sql;
      echo "All done!";
      '
    networks:
      - segrecanti_net
