// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model Author {
  id        Int       @id @default(autoincrement())
  name      String
  /// --- RELATIONS --- ///
  songs     Song[]
  /// --- SYSTEM PROPERTIES --- ///
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  createdBy Int?
  updatedBy Int?
}

/// @since 1.0.0
model Deed {
  id         Int         @id @default(autoincrement())
  type       String
  /// --- RELATIONS --- ///
  recordings Recording[]
  /// --- SYSTEM PROPERTIES --- ///
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  deletedAt  DateTime?
  createdBy  Int?
  updatedBy  Int?
}

/// @since 1.0.0
model Event {
  id         Int         @id @default(autoincrement())
  name       String
  startDate  DateTime    @db.Date
  endDate    DateTime    @db.Date
  /// --- RELATIONS --- ///
  recordings Recording[]
  /// --- SYSTEM PROPERTIES --- ///
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  deletedAt  DateTime?
  createdBy  Int?
  updatedBy  Int?
}

/// @since 1.0.0
model Moment {
  id         Int         @id @default(autoincrement())
  occurredOn String
  /// --- RELATIONS --- ///
  recordings Recording[]
  /// --- SYSTEM PROPERTIES --- ///
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  deletedAt  DateTime?
  createdBy  Int?
  updatedBy  Int?
}

/// @since 1.0.0
model Recording {
  id         Int       @id @default(autoincrement())
  evaluation String?
  comment    String?
  deed_id    Int?      @map("_deed_id")
  event_id   Int?      @map("_event_id")
  moment_id  Int?      @map("_moment_id")
  song_id    Int?      @map("_song_id")
  // filesystem reference
  refAudio   String?
  /// --- RELATIONS --- ///
  deed       Deed?     @relation(fields: [deed_id], references: [id])
  event      Event?    @relation(fields: [event_id], references: [id])
  moment     Moment?   @relation(fields: [moment_id], references: [id])
  song       Song?     @relation(fields: [song_id], references: [id])
  /// --- SYSTEM PROPERTIES --- ///
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  deletedAt  DateTime?
  createdBy  Int?
  updatedBy  Int?
}

/// @since 1.0.0
model Song {
  id           Int         @id @default(autoincrement())
  title        String
  // filesystem reference
  refLyrics    String?
  // filesystem reference
  refScore     String?
  // filesystem reference
  refTablature String?
  /// --- RELATIONS --- ///
  authors      Author[]
  recordings   Recording[]
  /// --- SYSTEM PROPERTIES --- ///
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  deletedAt    DateTime?
  createdBy    Int?
  updatedBy    Int?
}
